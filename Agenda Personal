import tkinter as tk
from tkinter import ttk, messagebox
from tkcalendar import DateEntry

class AgendaApp:
    def __init__(self, root):
        self.root = root
        self.root.title("Agenda Personal")

        # Frame para la entrada de datos
        self.entry_frame = ttk.Frame(root)
        self.entry_frame.pack(pady=10)

        # Etiquetas y entradas
        ttk.Label(self.entry_frame, text="Fecha:").grid(row=0, column=0)
        self.date_entry = DateEntry(self.entry_frame, width=12, background='darkblue', foreground='white', borderwidth=2)
        self.date_entry.grid(row=0, column=1)

        ttk.Label(self.entry_frame, text="Hora:").grid(row=0, column=2)
        self.time_entry = ttk.Entry(self.entry_frame)
        self.time_entry.grid(row=0, column=3)

        ttk.Label(self.entry_frame, text="Descripción:").grid(row=1, column=0)
        self.desc_entry = ttk.Entry(self.entry_frame, width=40)
        self.desc_entry.grid(row=1, column=1, columnspan=3)

        # Botones
        self.add_button = ttk.Button(self.entry_frame, text="Agregar Evento", command=self.add_event)
        self.add_button.grid(row=2, column=0, pady=10)

        self.delete_button = ttk.Button(self.entry_frame, text="Eliminar Evento Seleccionado", command=self.delete_event)
        self.delete_button.grid(row=2, column=1, pady=10)

        self.quit_button = ttk.Button(self.entry_frame, text="Salir", command=root.quit)
        self.quit_button.grid(row=2, column=2, pady=10)

        # TreeView para mostrar eventos
        self.tree = ttk.Treeview(root, columns=("Fecha", "Hora", "Descripción"), show="headings")
        self.tree.heading("Fecha", text="Fecha")
        self.tree.heading("Hora", text="Hora")
        self.tree.heading("Descripción", text="Descripción")
        self.tree.pack(pady=20)

    def add_event(self):
        date = self.date_entry.get()
        time = self.time_entry.get()
        description = self.desc_entry.get()
        if date and time and description:
            self.tree.insert("", "end", values=(date, time, description))
            self.clear_entries()
        else:
            messagebox.showwarning("Advertencia", "Por favor complete todos los campos.")

    def delete_event(self):
        selected_item = self.tree.selection()
        if selected_item:
            if messagebox.askyesno("Confirmación", "¿Estás seguro de que quieres eliminar este evento?"):
                self.tree.delete(selected_item)
        else:
            messagebox.showwarning("Advertencia", "Por favor selecciona un evento para eliminar.")

    def clear_entries(self):
        self.date_entry.set_date('')
        self.time_entry.delete(0, tk.END)
        self.desc_entry.delete(0, tk.END)

if __name__ == "__main__":
    root = tk.Tk()
    app = AgendaApp(root)
    root.mainloop()
